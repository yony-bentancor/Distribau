<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <title>TECNICO | Componentes y Stock</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500&display=swap" rel="stylesheet">
  <style>
    body {
      font-family: "Inter", sans-serif;
      background-color: #f5f7fa;
      color: #212529;
      margin: 0;
      padding: 0;
    }
  
    form {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 0.75rem 1rem;
      font-size: 0.9rem;
    }
  
    label {
      font-weight: 500;
      margin-bottom: 0.2rem;
      grid-column: span 2;
    }
  
    input, select, textarea {
      padding: 0.4rem 0.6rem;
      border-radius: 6px;
      border: 1px solid #ccc;
      font-size: 0.9rem;
      background: #fff;
      width: 100%;
    }
  
    textarea {
      resize: vertical;
      min-height: 60px;
      grid-column: span 2;
    }
  
    .checkboxes {
      display: flex;
      gap: 1rem;
      align-items: center;
      grid-column: span 2;
      margin-top: 0.3rem;
    }
  
    #componentesUsados {
      grid-column: span 2;
    }
  
    .componente {
      display: flex;
      align-items: center;
      gap: 0.5rem;
      margin-top: 0.3rem;
    }
  
    .componente select {
      flex: 2;
    }
  
    .componente input {
      flex: 1;
    }
  
    .componente button {
      background-color: #dc3545;
      color: white;
      border: none;
      padding: 0.4rem 0.6rem;
      border-radius: 4px;
      font-size: 0.8rem;
      cursor: pointer;
    }
  
    .componente button:hover {
      background-color: #c82333;
    }
  
    .acciones {
      grid-column: span 2;
      text-align: center;
      margin-top: 1rem;
    }
  
    .acciones button {
      background-color: #007bff;
      border: none;
      padding: 0.6rem 1.4rem;
      color: white;
      font-size: 1rem;
      border-radius: 8px;
      cursor: pointer;
    }
  
    .acciones button:hover {
      background-color: #0056b3;
    }
  
    #kmInput {
      display: none;
    }
  
    @media (max-width: 600px) {
      form {
        grid-template-columns: 1fr;
      }
    }
  </style>
  
</head>
<body>
  <div class="grid">
    <!-- Bodega del t√©cnico -->
    <section>
      <h2>üì¶ Tu Bodega</h2>
      <table>
        <thead>
          <tr>
            <th>Nombre</th>
            <th>Cantidad</th>
          </tr>
        </thead>
        <tbody>
          <% componentes.forEach(c => { %>
            <tr>
              <td><%= c.componente.nombre %></td>
              <td><%= c.cantidad %></td>
            </tr>
          <% }) %>
        </tbody>
      </table>
    </section>

    <!-- Bodega central -->
    <section>
      <h2>üè¢ Bodega Central</h2>
      <table>
        <thead>
          <tr>
            <th>Nombre</th>
            <th>Stock</th>
          </tr>
        </thead>
        <tbody>
          <% stockCentral.forEach(c => { %>
            <tr>
              <td><%= c.nombre %></td>
              <td><%= c.stock || 0 %></td>
            </tr>
          <% }) %>
        </tbody>
      </table>
    </section>

    <!-- Formulario de nueva actividad -->
    <section>
      <h2>üìã Nueva Actividad</h2>
      <form id="formActividad">
        <label for="numero">N√∫mero de actividad</label>
        <input type="text" name="numero" required>
      
        <label for="fecha">Fecha</label>
        <input type="date" name="fecha" required>
      
        <label for="tipo">Tipo de actividad</label>
        <select name="tipo" required>
          <option value="">Seleccionar...</option>
          <option value="instalacion">Instalaci√≥n</option>
          <option value="ampliacion">Ampliaci√≥n</option>
          <option value="continuacion">Continuaci√≥n</option>
          <option value="reduccion">Reducci√≥n</option>
          <option value="desinstalacion">Desinstalaci√≥n</option>
          <option value="reparacion">Reparaci√≥n</option>
        </select>
      
        <label for="estado">Estado</label>
        <select name="estado">
          <option value="realizado">Realizado</option>
          <option value="cancelado">Cancelado</option>
          <option value="pendiente">Pendiente</option>
        </select>
      
        <label>Componentes utilizados</label>
        <div id="componentesUsados"></div>
        <button type="button" onclick="agregarComponente()">‚ûï Agregar Componente</button>
      
        <div class="checkboxes">
          <label><input type="checkbox" name="comunicarse"> ¬øHay que comunicarse?</label>
          <label><input type="checkbox" id="usarKm" onchange="toggleKmInput(this)"> ¬øIncluye kil√≥metros?</label>
        </div>
      
        <input type="number" name="km" id="kmInput" placeholder="Kil√≥metros">
      
        <label>Comentario</label>
        <textarea name="comentario" rows="3"></textarea>
      
        <div class="acciones">
          <button type="submit">Guardar Actividad</button>
        </div>
      </form>
      
     
    </section>
  </div>
  <!-- Dentro del <script>... -->
<script>
  // Tra√≠do directamente del render del servidor
  const componentesTecnico = <%- JSON.stringify(bodegaUsuario) %>;


  function agregarComponente() {
    const div = document.createElement("div");
    div.classList.add("componente");

    const options = componentesTecnico.map(c => `
      <option value="${c.componente._id}">
        ${c.componente.nombre} (x${c.cantidad})
      </option>`).join("");

    div.innerHTML = `
      <select name="componente[]" required>
        <option value="">Seleccionar...</option>
        ${options}
      </select>
      <input type="number" name="cantidad[]" min="1" placeholder="Cantidad" required>
      <button type="button" onclick="this.parentNode.remove()">‚ùå</button>
    `;

    document.getElementById("componentesUsados").appendChild(div);
  }

  function toggleKmInput(checkbox) {
    document.getElementById("kmInput").style.display = checkbox.checked ? 'block' : 'none';
  }

  document.getElementById("formActividad").addEventListener("submit", async (e) => {
    e.preventDefault();
    const form = e.target;
    const data = new FormData(form);

    const componentes = Array.from(form.querySelectorAll("select[name='componente[]']")).map((sel, i) => ({
      componenteId: sel.value,
      cantidad: parseInt(form.querySelectorAll("input[name='cantidad[]']")[i].value),
    }));

    const payload = {
      numero: data.get("numero"),
      fecha: data.get("fecha"),
      tipo: data.get("tipo"),
      estado: data.get("estado"),
      comunicarse: data.get("comunicarse") === "on",
      km: parseFloat(data.get("km")) || 0,
      comentario: data.get("comentario"),
      componentesUsados: componentes,
    };

    const res = await fetch("/actividades", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(payload),
    });

    if (res.ok) {
      alert("‚úÖ Actividad registrada correctamente");
      form.reset();
      document.getElementById("componentesUsados").innerHTML = "";
      window.location.reload(); // 
    } else {
      alert("‚ùå Error al registrar actividad");
    }
  });
</script>

</body>
</html>
